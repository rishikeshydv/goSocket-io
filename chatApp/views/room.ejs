<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Chatroom</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 0;
      background-color: #f2f2f2;
    }

    #chat-container {
      max-width: 600px;
      margin: 20px auto;
      border: 1px solid #ccc;
      border-radius: 5px;
      overflow: hidden;
    }

    #chat-messages {
      padding: 10px;
      overflow-y: scroll;
      max-height: 300px;
    }

    #input-container {
      display: flex;
      align-items: center;
      padding: 10px;
      background-color: #fff;
      border-top: 1px solid #ccc;
    }

    #message-input {
      flex-grow: 1;
      padding: 8px;
      margin-right: 10px;
    }

    #send-button {
      padding: 8px 16px;
      background-color: #4caf50;
      color: #fff;
      border: none;
      border-radius: 3px;
      cursor: pointer;
    }
  </style>
</head>
<body>

<div id="chat-container">
  <div id="chat-messages"></div>
  <div id="input-container">
    <input type="text" id="message-input" placeholder="Type your message...">
    <button id="send-button">Send</button>
  </div>
</div>

<script src="/socket.io/socket.io.js"></script>
<script>
  
  const messageSection = document.getElementById('chat-messages');
  const inputMessage = document.getElementById('message-input');
  const sendButton = document.getElementById('send-button');
  // const feedback = document.getElementById('feedback');
  
  const socket = io.connect("http://localhost:8000");
  
  
  sendButton?.addEventListener('click',()=>{
      if (inputMessage?.value.trim() !== "") {
          socket.emit('sendMessage',inputMessage?.value);
          const messageElement = document.createElement('div');
          messageElement.textContent = inputMessage?.value;
          messageSection?.appendChild(messageElement);
          inputMessage.value="";
      }
      else {
          console.log("Please enter a non-empty message.");
      }
  });
  
  socket.on("disconnect", () => {
      console.log("Socket disconnected.");
  });

</script>

</body>
</html>
